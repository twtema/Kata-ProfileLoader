version: "3.9"
services:
  postgres:
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "profile-loader"
      POSTGRES_USER: "kata"
      POSTGRES_PASSWORD: "kata"
    volumes:
      - .:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test_topic:1:1"
    depends_on:
      - zookeeper
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "kata_user@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "kata_password"
    ports:
      - "5050:80"  # Маппинг порта 80 контейнера на порт 5050 хоста
  app:
    depends_on:
      - postgres
      - zookeeper
      - kafka
      - redis
      - pgadmin
    image: profile-loader
    container_name: "profile-loader"
    ports:
        - "8081:8081"
    restart: always
    environment:
      SPRING_DATASOURCE_USER: kata
      SPRING_DATASOURCE_PASSWORD: kata
      SPRING_DATASOURCE_PORT: 5432
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/profile-loader
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
#  grafana:
#    build: './scripts/grafana'
#    restart: unless-stopped
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./scripts/grafana:/var/lib/grafana
#      - ./scripts/grafana/provisioning/dashboards:/var/lib/grafana/provisioning/dashboards
#    user: "1000:1000"
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    networks:
#      monitoring:
#        aliases:
#          - grafana
#  prometheus:
#      image: prom/prometheus
#      user: root
#      ports:
#        - "9090:9090"
#      volumes:
#        - ./scripts/prometheus.yml:/etc/prometheus/prometheus.yml
#        - ./prometheus:/prometheus
#      extra_hosts:
#        - "host.docker.internal:host-gateway"
#      networks:
#        monitoring:
#          aliases:
#            - prometheus
#networks:
#    monitoring: